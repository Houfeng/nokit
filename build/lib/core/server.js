/*csd*/var http=require("http");var fs=require("fs");var path=require("path");var querystring=require("querystring");var url=require("url");var console=require("./console");var utils=require("./utils");var CONFIG_FILE="./web.json",HANDLERS_PATH="./handlers",STATICS_PATH="./statics",RESPONSE_PAGES_PATH="./templates";var Server=function(a){var b=this;b.options=a||{};b.init(a);};Server.prototype.infiConfigs=function(c){var e=this;var d=path.dirname(path.dirname(module.filename));var f=path.resolve(d,CONFIG_FILE);var g=utils.readJSONSync(f);utils.each(g.handlers,function(i,h){g.handlers[i]=path.resolve(path.resolve(d,HANDLERS_PATH),h);});utils.each(g.responsePages,function(i,h){g.responsePages[i]=path.resolve(path.resolve(d,RESPONSE_PAGES_PATH),h);});var a=path.resolve(e.options.root,CONFIG_FILE);var b=utils.readJSONSync(a);utils.each(b.handlers,function(i,h){b.handlers[i]=path.resolve(e.options.root,h);});utils.each(b.responsePages,function(i,h){b.responsePages[i]=path.resolve(e.options.root,h);});e.configs={};e.configs=utils.mix(e.configs,g,true,null,2,true);e.configs=utils.mix(e.configs,b,true,null,2,true);e.configs=utils.mix(e.configs,e.options,true,null,2,true);e.installPath=d;e.root=e.configs.root;if(c){c();}};Server.prototype.require=function(a){var b=this;return require(path.resolve(b.installPath,a));};Server.prototype.loadHandlers=function(){var a=this;a.handlers={};utils.each(a.configs.handlers,function(c,d){var b=require(d);a.handlers[c]=new b(a);});};Server.prototype.loadResponsePages=function(){var a=this;a.responsePages={};utils.each(a.configs.responsePages,function(b,c){a.responsePages[b]=utils.compileTemplateSync(c);});};Server.prototype.handleRequest=function(c,d,a){var e=this;var b=e.handlers[c.extname]||e.handlers["*"];b.handleRequest(c,d);};Server.prototype.responseError=function(c,d,a){var e=this;d.writeHead(500,{"Content-Type":e.configs.mimeType[".html"],"url":c.url});var b={errorMessage:a,server:e,request:c};d.end(e.responsePages["500"](b));};Server.prototype.responseNotFound=function(b,c){var d=this;c.writeHead(404,{"Content-Type":d.configs.mimeType[".html"],"url":b.url});var a={server:d,request:b};c.end(d.responsePages["404"](a));};Server.prototype.responseContent=function(c,d,a,b){var e=this;d.writeHead(200,{"Content-Type":b||c.mime,"url":c.url});d.end(a);};Server.prototype.createServer=function(){var a=this;a.httpServer=http.createServer(function(b,c){b.postData="";b.url=decodeURI(b.url||"");b.withoutQueryStringURL=b.url.split("?")[0].split("#")[0];b.staticPath=path.resolve(a.configs.root,STATICS_PATH);b.physicalPath=path.normalize(b.staticPath+"/"+b.withoutQueryStringURL);b.extname=path.extname(b.physicalPath);b.mime=a.configs.mimeType[b.extname]||a.configs.mimeType["*"];b.addListener("data",function(d){b.postData+=d;});b.addListener("end",function(){b.postData=querystring.parse(b.postData);a.handleRequest(b,c);});});};Server.prototype.start=function(a){var c=this;try{c.httpServer.listen(c.configs.port,a);console.log('已在 "'+c.configs.root+":"+c.configs.port+'" 启动服务。');}catch(b){console.error(b.message);}};Server.prototype.stop=function(a){var c=this;try{c.httpServer.close(a);console.log('已在 "'+c.configs.root+":"+c.configs.port+'" 停止服务。');}catch(b){console.error(b.message);}};Server.prototype.init=function(a){var b=this;if(!b.options.root){return console.error("创建 Server 实例时发生异常，必需指定一个存在的根目录。");}b.infiConfigs();b.loadHandlers();b.loadResponsePages();b.createServer();};module.exports=Server;