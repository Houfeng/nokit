/*csd*/(function(a){a.toCSSVisitor=function(b){this._visitor=new a.visitor(this);this._env=b;};a.toCSSVisitor.prototype={isReplacing:true,run:function(b){return this._visitor.visit(b);},visitRule:function(b,c){if(b.variable){return[];}return b;},visitMixinDefinition:function(b,c){b.frames=[];return[];},visitExtend:function(b,c){return[];},visitComment:function(b,c){if(b.isSilent(this._env)){return[];}return b;},visitMedia:function(b,c){b.accept(this._visitor);c.visitDeeper=false;if(!b.rules.length){return[];}return b;},visitDirective:function(c,d){if(c.currentFileInfo.reference&&!c.isReferenced){return[];}if(c.name==="@charset"){if(this.charset){if(c.debugInfo){var b=new a.Comment("/* "+c.toCSS(this._env).replace(/\n/g,"")+" */\n");b.debugInfo=c.debugInfo;return this._visitor.visit(b);}return[];}this.charset=true;}return c;},checkPropertiesInRoot:function(d){var c;for(var b=0;b<d.length;b++){c=d[b];if(c instanceof a.Rule&&!c.variable){throw {message:"properties must be inside selector blocks, they cannot be in the root.",index:c.index,filename:c.currentFileInfo?c.currentFileInfo.filename:null};}}},visitRuleset:function(f,h){var e,g=[];if(f.firstRoot){this.checkPropertiesInRoot(f.rules);}if(!f.root){if(f.paths){f.paths=f.paths.filter(function(k){var j;if(k[0].elements[0].combinator.value===" "){k[0].elements[0].combinator=new (a.Combinator)("");}for(j=0;j<k.length;j++){if(k[j].getIsReferenced()&&k[j].getIsOutput()){return true;}}return false;});}var d=f.rules,c=d?d.length:0;for(var b=0;b<c;){e=d[b];if(e&&e.rules){g.push(this._visitor.visit(e));d.splice(b,1);c--;continue;}b++;}if(c>0){f.accept(this._visitor);}else{f.rules=null;}h.visitDeeper=false;d=f.rules;if(d){this._mergeRules(d);d=f.rules;}if(d){this._removeDuplicateRules(d);d=f.rules;}if(d&&d.length>0&&f.paths.length>0){g.splice(0,0,f);}}else{f.accept(this._visitor);h.visitDeeper=false;if(f.firstRoot||(f.rules&&f.rules.length>0)){g.splice(0,0,f);}}if(g.length===1){return g[0];}return g;},_removeDuplicateRules:function(g){if(!g){return;}var d={},f,c,b;for(b=g.length-1;b>=0;b--){c=g[b];if(c instanceof a.Rule){if(!d[c.name]){d[c.name]=c;}else{f=d[c.name];if(f instanceof a.Rule){f=d[c.name]=[d[c.name].toCSS(this._env)];}var e=c.toCSS(this._env);if(f.indexOf(e)!==-1){g.splice(b,1);}else{f.push(e);}}}}},_mergeRules:function(g){if(!g){return;}var b={},e,f,d;for(var c=0;c<g.length;c++){f=g[c];if((f instanceof a.Rule)&&f.merge){d=[f.name,f.important?"!":""].join(",");if(!b[d]){b[d]=[];}else{g.splice(c--,1);}b[d].push(f);}}Object.keys(b).map(function(h){function l(k){return new (a.Expression)(k.map(function(n){return n.value;}));}function m(k){return new (a.Value)(k.map(function(n){return n;}));}e=b[h];if(e.length>1){f=e[0];var j=[];var i=[];e.map(function(k){if(k.merge==="+"){if(i.length>0){j.push(l(i));}i=[];}i.push(k);});j.push(l(i));f.value=m(j);}});}};})(require("./tree"));