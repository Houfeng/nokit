/*csd*/function formatError(a,f){f=f||{};var e="";var d=a.extract;var b=[];var g=function(h){return h;};if(a.stack&&!a.type){return g(a.stack,"red");}if(!a.hasOwnProperty("index")||!d){return a.stack||a.message;}if(typeof(d[0])==="string"){b.push(g((a.line-1)+" "+d[0],"grey"));}if(typeof(d[1])==="string"){var c=a.line+" ";if(d[1]){c+=d[1].slice(0,a.column)+g(g(g(d[1][a.column],"bold")+d[1].slice(a.column+1),"red"),"inverse");}b.push(c);}if(typeof(d[2])==="string"){b.push(g((a.line+1)+" "+d[2],"grey"));}b=b.join("\n")+g("","reset")+"\n";e+=g(a.type+"Error: "+a.message,"red");if(a.filename){e+=g(" in ","red")+a.filename+g(" on line "+a.line+", column "+(a.column+1)+":","grey");}e+="\n"+b;if(a.callLine){e+=g("from ","red")+(a.filename||"")+"/n";e+=g(a.callLine,"grey")+" "+a.callExtract+"/n";}return e;}function writeError(a,b){b=b||{};if(b.silent){return;}print(formatError(a,b));}function loadStyleSheet(h,a,f,g){var c=Math.max(name.lastIndexOf("/"),name.lastIndexOf("\\")),i=name.slice(0,c+1)+h.href,b=h.contents||{},d=readFile(i);d=d.replace(/^\xEF\xBB\xBF/,"");b[i]=d;var e=new less.Parser({paths:[h.href.replace(/[\w\.-]+$/,"")],contents:b});e.parse(d,function(j,k){if(j){return writeError(j);}try{a(j,k,d,h,{local:false,lastModified:0,remaining:g},i);}catch(j){writeError(j);}});}less.Parser.fileLoader=function(g,b,a,f){var h=g;if(b&&b.currentDirectory&&!/^\//.test(g)){h=less.modules.path.join(b.currentDirectory,g);}var l=less.modules.path.dirname(h);var k={currentDirectory:l+"/",filename:h};if(b){k.entryPath=b.entryPath;k.rootpath=b.rootpath;k.rootFilename=b.rootFilename;k.relativeUrls=b.relativeUrls;}else{k.entryPath=l;k.rootpath=less.rootpath||l;k.rootFilename=h;k.relativeUrls=f.relativeUrls;}var i=g.lastIndexOf("/");if(k.relativeUrls&&!/^(?:[a-z-]+:|\/)/.test(g)&&i!=-1){var m=g.slice(0,i+1);k.rootpath=k.rootpath+m;}k.currentDirectory=l;k.filename=h;var c=null;try{c=readFile(h);}catch(d){a({type:"File",message:"'"+less.modules.path.basename(h)+"' wasn't found"});return;}try{a(null,c,h,k,{lastModified:0});}catch(d){a(d,null,h);}};function writeFile(b,a){var c=new java.io.FileWriter(b);var d=new java.io.BufferedWriter(c);d.write(a);d.close();}(function(a){var j={depends:false,compress:false,cleancss:false,max_line_len:-1,optimization:1,silent:false,verbose:false,lint:false,paths:[],color:true,strictImports:false,rootpath:"",relativeUrls:false,ieCompat:true,strictMath:false,strictUnits:false};var d=true,f;var b=function(e,q){if(!q){print(e+" option requires a parameter");d=false;return false;}return true;};var c=function(e){var q=/^((on|t|true|y|yes)|(off|f|false|n|no))$/i.exec(e);if(!q){print(" unable to parse "+e+" as a boolean. use one of on/t/true/y/yes/off/f/false/n/no");d=false;return false;}return Boolean(q[2]);};var p="";var o=false;a=a.filter(function(e){var q=e.match(/^-I(.+)$/);if(q){j.paths.push(q[1]);return false;}q=e.match(/^--?([a-z][0-9a-z-]*)(?:=(.*))?$/i);if(q){e=q[1];}else{return e;}switch(e){case"v":case"version":console.log("lessc "+less.version.join(".")+" (LESS Compiler) [JavaScript]");d=false;break;case"verbose":j.verbose=true;break;case"s":case"silent":j.silent=true;break;case"l":case"lint":j.lint=true;break;case"strict-imports":j.strictImports=true;break;case"h":case"help":d=false;break;case"x":case"compress":j.compress=true;break;case"M":case"depends":j.depends=true;break;case"yui-compress":p+="yui-compress option has been removed. assuming clean-css.";j.cleancss=true;break;case"clean-css":j.cleancss=true;break;case"max-line-len":if(b(e,q[2])){j.maxLineLen=parseInt(q[2],10);if(j.maxLineLen<=0){j.maxLineLen=-1;}}break;case"no-color":j.color=false;break;case"no-ie-compat":j.ieCompat=false;break;case"no-js":j.javascriptEnabled=false;break;case"include-path":if(b(e,q[2])){j.paths=q[2].split(os.type().match(/Windows/)?";":":").map(function(r){if(r){return r;}});}break;case"O0":j.optimization=0;break;case"O1":j.optimization=1;break;case"O2":j.optimization=2;break;case"line-numbers":if(b(e,q[2])){j.dumpLineNumbers=q[2];}break;case"source-map":if(!q[2]){j.sourceMap=true;}else{j.sourceMap=q[2];}break;case"source-map-rootpath":if(b(e,q[2])){j.sourceMapRootpath=q[2];}break;case"source-map-basepath":if(b(e,q[2])){j.sourceMapBasepath=q[2];}break;case"source-map-map-inline":o=true;j.sourceMap=true;break;case"source-map-less-inline":j.outputSourceFiles=true;break;case"source-map-url":if(b(e,q[2])){j.sourceMapURL=q[2];}break;case"source-map-output-map-file":if(b(e,q[2])){j.writeSourceMap=function(r){writeFile(q[2],r);};}break;case"rp":case"rootpath":if(b(e,q[2])){j.rootpath=q[2].replace(/\\/g,"/");}break;case"ru":case"relative-urls":j.relativeUrls=true;break;case"sm":case"strict-math":if(b(e,q[2])){j.strictMath=c(q[2]);}break;case"su":case"strict-units":if(b(e,q[2])){j.strictUnits=c(q[2]);}break;default:console.log("invalid option "+e);d=false;}});if(!d){return;}var i=a[0];if(i&&i!="-"){}var k=a[1];var l=a[1];if(k){j.sourceMapOutputFilename=k;if(p){console.log(p);}}if(j.sourceMap===true){console.log("output: "+k);if(!k&&!o){console.log("the sourcemap option only has an optional filename if the css filename is given");return;}j.sourceMapFullFilename=j.sourceMapOutputFilename+".map";j.sourceMap=less.modules.path.basename(j.sourceMapFullFilename);}else{if(j.sourceMap){j.sourceMapOutputFilename=j.sourceMap;}}if(!i){console.log("lessc: no inout files");console.log("");f=1;return;}if(j.depends){if(!l){console.log("option --depends requires an output path to be specified");return;}console.log(l+": ");}if(!i){console.log("No files present in the fileset");quit(1);}var h=null;try{h=readFile(i,"utf-8");}catch(g){console.log("lesscss: couldn't open file "+i);quit(1);}j.filename=i;var n;try{var m=new less.Parser(j);m.parse(h,function(q,r){if(q){writeError(q,j);quit(1);}else{n=r.toCSS(j);if(k){writeFile(k,n);console.log("Written to "+k);}else{print(n);}quit(0);}});}catch(g){writeError(g,j);quit(1);}console.log("done");}(arguments));